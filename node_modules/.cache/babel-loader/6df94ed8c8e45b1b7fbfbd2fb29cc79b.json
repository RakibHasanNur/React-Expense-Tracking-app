{"ast":null,"code":"var _jsxFileName = \"G:\\\\React\\\\projects\\\\First react project\\\\src\\\\Components\\\\Expenses\\\\Expences.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenceItem from './ExpenceItem.js';\nimport ExpensesFilter from './ExpensesFilter.js';\nimport './Expences.css';\nimport Card from '../UI/card.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilterdYear] = useState('2021');\n\n  const filterChangeHandler = selectedYear => {\n    setFilterdYear(selectedYear);\n  }; // filter is a js method\n\n\n  const filterdExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n\n  if (filterdExpenses > 0) {\n    expensesContent = filterdExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenceItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"QhWOlUJzCNGn2GwXKZBVtxyGHo4=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["G:/React/projects/First react project/src/Components/Expenses/Expences.js"],"names":["React","useState","ExpenceItem","ExpensesFilter","Card","Expenses","props","filteredYear","setFilterdYear","filterChangeHandler","selectedYear","filterdExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","map","title","amount","id"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM,CAACC,YAAD,EAAeC,cAAf,IAAiCP,QAAQ,CAAC,MAAD,CAA/C;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,cAAc,CAACE,YAAD,CAAd;AACD,GAFD,CAJ0B,CAQ1B;;;AACA,QAAMC,eAAe,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAO,IAAI;AACrD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFuB,CAAxB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,eAAe,GAAG,CAAtB,EAA0B;AACtBO,IAAAA,eAAe,GAAGP,eAAe,CAACQ,GAAhB,CAAqBL,OAAO,iBAC9C,QAAC,WAAD;AAEE,MAAA,KAAK,EAAIA,OAAO,CAACM,KAFnB;AAGE,MAAA,MAAM,EAAIN,OAAO,CAACO,MAHpB;AAIE,MAAA,IAAI,EAAIP,OAAO,CAACC;AAJlB,OACSD,OAAO,CAACQ,EADjB;AAAA;AAAA;AAAA;AAAA,YADkB,CAAlB;AAQH;;AAAA;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEf,YADZ;AAEE,MAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,EAOGS,eAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA5DD;;GAAMb,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["  \r\nimport React, {useState} from 'react';\r\nimport ExpenceItem from './ExpenceItem.js';\r\nimport ExpensesFilter from './ExpensesFilter.js';\r\nimport './Expences.css';\r\nimport Card from '../UI/card.js';\r\n\r\nconst Expenses = (props) => {\r\n\r\n  const [filteredYear, setFilterdYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilterdYear(selectedYear);\r\n  }\r\n\r\n  // filter is a js method\r\n  const filterdExpenses = props.items.filter (expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  })\r\n\r\n  let expensesContent = <p>No Expenses Found</p>;\r\n\r\n  if (filterdExpenses > 0 ) {\r\n      expensesContent = filterdExpenses.map( expense => \r\n      <ExpenceItem\r\n        key = {expense.id}\r\n        title = {expense.title}\r\n        amount = {expense.amount}\r\n        date = {expense.date}\r\n      ></ExpenceItem>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter \r\n        selected={filteredYear} \r\n        onChangeFilter={filterChangeHandler}>\r\n      </ExpensesFilter>\r\n      {/* used turnary opartor so that we can set up something when there's no filterdExpeses */}\r\n\r\n      {expensesContent}\r\n\r\n      {/* initially the rendering process of ExpenseItem was this */}\r\n      {/* <ExpenceItem\r\n        title={props.items[0].title}\r\n        amount={props.items[0].amount}\r\n        date={props.items[0].date}\r\n      />\r\n      <ExpenceItem\r\n        title={props.items[1].title}\r\n        amount={props.items[1].amount}\r\n        date={props.items[1].date}\r\n      />\r\n      <ExpenceItem\r\n        title={props.items[2].title}\r\n        amount={props.items[2].amount}\r\n        date={props.items[2].date}\r\n      />\r\n      <ExpenceItem\r\n        title={props.items[3].title}\r\n        amount={props.items[3].amount}\r\n        date={props.items[3].date}\r\n      /> */}\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}